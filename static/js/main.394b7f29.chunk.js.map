{"version":3,"sources":["utils/potluck.jpg","utils/pokemon.jpg","utils/plants.jpg","component/CreationCard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","boxShadow","maxWidth","background","borderRadius","padding","marginTop","transition","transform","media","height","paddingTop","button","marginBottom","color","icon","CreationCard","classes","className","Card","CardMedia","image","potluck","IconButton","href","pokemon","plants","App","React","useState","darkMode","setDarkMode","createMuiTheme","palette","type","main","secondary","ThemeProvider","Paper","Switch","checked","onChange","loop","Infinity","wrapper","steps","id","style","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.394b7f29.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/potluck.44ae7269.jpg\";","export default __webpack_public_path__ + \"static/media/pokemon.48a28ce0.jpg\";","export default __webpack_public_path__ + \"static/media/plants.57c3b8d9.jpg\";","import React from \"react\";\nimport \"./CreationCard.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\n\nimport potluck from \"../utils/potluck.jpg\";\nimport pokemon from \"../utils/pokemon.jpg\";\nimport plants from \"../utils/plants.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    boxShadow:\n      \"0 2.8px 2.2px rgba(0, 0, 0, 0.034),0 6.7px 5.3px rgba(0, 0, 0, 0.048),0 12.5px 10px rgba(0, 0, 0, 0.06),0 22.3px 17.9px rgba(0, 0, 0, 0.072),0 41.8px 33.4px rgba(0, 0, 0, 0.086),0 100px 80px rgba(0, 0, 0, 0.12)\",\n    maxWidth: 400,\n    background: \"white\",\n    borderRadius: \"5px\",\n    padding: 0,\n    marginTop: \"3%\",\n    transition: \"all 0.3s\",\n\n    \"&:hover\": {\n      transform: \"scale(1.04)\",\n    },\n  },\n  media: {\n    height: \"48vh\",\n    paddingTop: \"56.25%\", // 16:9\n  },\n  button: {\n    marginTop: 10,\n    marginBottom: 10,\n    color: \"black\",\n    \"&:hover\": {\n      transition: \"all 0.3s ease-out\",\n      transform: \"scale(1.2)\",\n    },\n  },\n  icon: {\n    width: 35,\n    height: 35,\n  },\n}));\n\nexport default function CreationCard() {\n  const classes = useStyles();\n\n  return (\n    <div className='creation__card'>\n      <Card className={classes.root}>\n        <CardMedia className={classes.media} image={potluck} />\n        <div className='creation__IconButton'>\n          <IconButton\n            className={classes.button}\n            href='http://potlock.netlify.app'\n          >\n            <LiveTvIcon className={classes.icon} />\n          </IconButton>\n          <IconButton\n            className={classes.button}\n            href='https://github.com/BW-Potluck-Planner-TT-50/frontend'\n          >\n            <GitHubIcon className={classes.icon} />\n          </IconButton>\n        </div>\n      </Card>\n      <Card className={classes.root}>\n        <CardMedia className={classes.media} image={pokemon} />\n        <div className='creation__IconButton'>\n          <IconButton\n            className={classes.button}\n            href='https://pokemon-world.vercel.app/'\n          >\n            <LiveTvIcon className={classes.icon} />\n          </IconButton>\n          <IconButton\n            className={classes.button}\n            href='https://github.com/sunkist5691/Pokemon-Card-App'\n          >\n            <GitHubIcon className={classes.icon} />\n          </IconButton>\n        </div>\n      </Card>\n      <Card className={classes.root}>\n        <CardMedia className={classes.media} image={plants} />\n        <div className='creation__IconButton'>\n          <IconButton\n            className={classes.button}\n            href='https://determined-kare-dec921.netlify.app/'\n          >\n            <LiveTvIcon className={classes.icon} />\n          </IconButton>\n          <IconButton\n            className={classes.button}\n            href='https://github.com/TT50-Water-My-Plants/backend'\n          >\n            <GitHubIcon className={classes.icon} />\n          </IconButton>\n        </div>\n      </Card>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport Typical from \"react-typical\";\nimport CreationCard from \"./component/CreationCard\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport { Paper, Switch } from \"@material-ui/core\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nconst App = () => {\n  const [darkMode, setDarkMode] = React.useState(false);\n  const theme = createMuiTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n    },\n    main: {\n      secondary: \"black\",\n    },\n  });\n  return (\n    <>\n      <div className='main'>\n        <ThemeProvider theme={theme}>\n          <Paper>\n            <div className='switch'>\n              <Switch\n                checked={darkMode}\n                onChange={() => setDarkMode(!darkMode)}\n              />\n            </div>\n            <section className='self__intro'>\n              <p className='typewriter'>\n                <b>I'm a </b>{\" \"}\n                <Typical\n                  loop={Infinity}\n                  wrapper='b'\n                  steps={[\n                    \"Minimalist\",\n                    2000,\n                    \"Musician\",\n                    2000,\n                    \"Developer\",\n                    2000,\n                    \"Engineer\",\n                    2000,\n                  ]}\n                />\n              </p>\n            </section>\n\n            <section id='creation' className='project'>\n              <div className='cards'>\n                <CreationCard />\n              </div>\n            </section>\n            <section id='contact' className='contact'>\n              <IconButton href='https://www.linkedin.com/in/joon5691/'>\n                <LinkedInIcon\n                  className='icon__button'\n                  color='primary'\n                  style={{ fontSize: \"50px\", transition: \"all 0.3s\" }}\n                />\n              </IconButton>\n              <IconButton href='https://github.com/sunkist5691'>\n                <GitHubIcon\n                  className='icon__button'\n                  style={{\n                    fontSize: \"43px\",\n                    transition: \"all 0.3s\",\n                    color: \"black\",\n                  }}\n                />\n              </IconButton>\n              <IconButton href='https://www.instagram.com/jkincali/'>\n                <InstagramIcon\n                  className='icon__button'\n                  style={{\n                    fontSize: \"50px\",\n                    transition: \"all 0.3s\",\n                    color: \"#f50057\",\n                  }}\n                />\n              </IconButton>\n            </section>\n          </Paper>\n        </ThemeProvider>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}